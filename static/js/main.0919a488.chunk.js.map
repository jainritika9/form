{"version":3,"sources":["form.js","App.js","index.js"],"names":["Forms","initialValues","fullName","LegalName","email","country","address1","address2","city","state","phone","seller","product","GST","zip","validationSchema","Yup","shape","min","required","matches","max","onSubmit","fields","alert","JSON","stringify","render","errors","touched","status","Container","left","Segment","secondary","style","margin","borderRadius","width","fontSize","textAlign","Grid","padding","Row","Column","htmlFor","name","type","className","border","component","color","Country","Button","inverted","React","Component","App","backgroundColor","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0919a488.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport {Container,Segment,Button,Grid} from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\n\r\nclass Forms extends React.Component {\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    fullName: '',\r\n                    LegalName: '',\r\n                    email: '',\r\n                    country:'',address1:'',address2:'',\r\n                    city:'',\r\n                    state:'',\r\n                    phone:'',seller:'',product:'',GST:'',zip:''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    LegalName: Yup.string()\r\n                        .min(2, 'Too Short!')\r\n                        .required('Legal Name is required'),\r\n                    fullName: Yup.string()\r\n                        .min(2, 'Too Short!')\r\n                        .required('Full Name is required'),\r\n                    email: Yup.string()\r\n                        .email('Email is invalid')\r\n                        .required('Email is required'),\r\n                    country: Yup.string()\r\n                        .required('Country is required'),\r\n                    city: Yup.string()\r\n                        .required('City is required'),\r\n                    state: Yup.string()\r\n                        .required('State is required'),\r\n                    phone: Yup.string()\r\n                        .matches( /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/, 'Phone number is not valid')\r\n                        .required('Phone number is required'),\r\n                    zip: Yup.string()\r\n                        .max(5,'Enter valid zip code')\r\n                        .required('zip is required'),\r\n                    GST: Yup.string()\r\n                        .required('GST is required'),\r\n                    product: Yup.string()\r\n                        .required('This field is required'),\r\n                    seller: Yup.string()\r\n                        .required('This field is required'),\r\n                    address1: Yup.string()\r\n                        .required('This field is required'),\r\n                    address2: Yup.string()\r\n                        .required('This field is required'),\r\n                    \r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n                render={({ errors, status, touched }) => (\r\n                    <Container left>\r\n                        <Segment secondary  style={{margin:'auto',borderRadius:10,width:800,fontSize:18}}>\r\n                    <Form>\r\n                        <h1 style={{textAlign:'center'}}> Tell Us about Yur Business</h1>\r\n                            <Grid style={{fontSize:17,padding:40}}>\r\n                            <Grid.Row><Grid.Column  width={10}><label htmlFor=\"LegalName\">Legal Name</label><br/>\r\n                            <Field name=\"LegalName\" type=\"text\" className={'form-control' + (errors.LegalName && touched.LegalName ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}}/>\r\n                            <ErrorMessage name=\"LegalName\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}}/></Grid.Column></Grid.Row>\r\n\r\n                       \r\n                            <Grid.Row><Grid.Column  width={10}><label htmlFor=\"fullName\">Full Name</label><br/>\r\n                            <Field name=\"fullName\" type=\"text\" className={'form-control' + (errors.fullName && touched.fullName ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}}/>\r\n                            <ErrorMessage name=\"fullName\" component=\"div\" className=\"invalid-feedback\"style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n                            \r\n                            <Grid.Row><Grid.Column  width={10}><label htmlFor=\"email\">Email</label><br/>\r\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}}/>\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n                        \r\n                            <Grid.Row><Grid.Column  width={10}><label htmlFor=\"Country\">Country</label><br/>\r\n                            <Field name=\"country\" type=\"text\" className={'form-control' + (errors.Country && touched.Country ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}} />\r\n                            <ErrorMessage name=\"country\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n\r\n                \r\n                            <Grid.Row><Grid.Column><label htmlFor=\"Address1\">Address1</label><br/>\r\n                            <Field name=\"address1\" type=\"text\" className={'form-control' + (errors.address1 && touched.address1 ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}}/>\r\n                            <ErrorMessage name=\"address1\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n\r\n                            <Grid.Row><Grid.Column><label >Address2</label><br/>\r\n                            <Field name=\"address2\" type=\"text\" className={'form-control' + (errors.address2 && touched.address2 ? ' is-invalid' : '')}style={{borderRadius:5,border:'grey',padding:10,width:600}}/>\r\n                            <ErrorMessage name=\"address2\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n\r\n\r\n                            <Grid.Row><Grid.Column  width={10}><label htmlFor=\"City\">City</label><br/>\r\n                            <Field name=\"city\" type=\"text\" className={'form-control' + (errors.city && touched.city ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}} />\r\n                            <ErrorMessage name=\"city\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n\r\n                            <Grid.Row><Grid.Column  width={8}><label htmlFor=\"State\">State</label><br/>\r\n                            <Field name=\"state\" type=\"text\" className={'form-control' + (errors.state && touched.state ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:340}} />\r\n                            <ErrorMessage name=\"state\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column>\r\n                            \r\n                            <Grid.Column  width={8}><label htmlFor=\"zip\">Zip</label><br/>\r\n                            <Field name=\"zip\" type=\"text\" className={'form-control' + (errors.zip && touched.zip ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:245}} />\r\n                            <ErrorMessage name=\"zip\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n                        \r\n                            <Grid.Row><Grid.Column  width={10}><label htmlFor=\"GST\">GST NO.</label><br/>\r\n                            <Field name=\"GST\" type=\"text\" className={'form-control' + (errors.GST && touched.GST ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}} />\r\n                            <ErrorMessage name=\"GST\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n\r\n                            <Grid.Row><Grid.Column  width={10}><label htmlFor=\"phone\">Phone</label><br/>\r\n                            <Field name=\"phone\" type=\"phone\" className={'form-control' + (errors.phone && touched.phone ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}} />\r\n                            <ErrorMessage name=\"phone\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n\r\n                            <Grid.Row><Grid.Column  width={10}><label htmlFor=\"product\">Make Product Category</label><br/>\r\n                            <Field name=\"product\" type=\"text\" className={'form-control' + (errors.product && touched.product ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}} />\r\n                            <ErrorMessage name=\"product\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n\r\n                            <Grid.Row><Grid.Column  width={10}><label htmlFor=\"seller\">Seller Category</label><br/>\r\n                            <Field name=\"seller\" type=\"text\" className={'form-control' + (errors.seller && touched.seller ? ' is-invalid' : '')} style={{borderRadius:5,border:'grey',padding:10,width:600}} />\r\n                            <ErrorMessage name=\"seller\" component=\"div\" className=\"invalid-feedback\" style={{color:'red',fontSize:14}} /></Grid.Column></Grid.Row>\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <Button type=\"submit\" inverted color='green'>Save</Button>\r\n                            \r\n                        </div>\r\n                        </Grid>\r\n                    </Form>\r\n                    </Segment>\r\n                    </Container>\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Forms;","import Forms from './form.js';\nfunction App() {\n  return (\n    <div className=\"App\" style={{backgroundColor:'teal'}}>\n      <Forms/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nReactDOM.render(\n  <App />,  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}